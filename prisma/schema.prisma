// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  posts     Post[]
  comments  Comment[]
  reactions Reaction[]
}

model Project {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  posts       Post[]
  reactions   Reaction[] @relation("ProjectReactions")
}

model Post {
  id          Int        @id @default(autoincrement())
  title       String
  content     String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  project     Project    @relation(fields: [projectId], references: [id])
  projectId   Int
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  comments    Comment[]
  tags        Tag[]      @relation("PostTags")
  reactions   Reaction[] @relation("PostReactions")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] @relation("PostTags")
}

model Reaction {
  id        Int        @id @default(autoincrement())
  type      String     // Ïòà: "üëç", "‚ù§Ô∏è" Îì±
  createdAt DateTime   @default(now())
  user      User?      @relation(fields: [userId], references: [id])
  userId    Int?
  project   Project?   @relation("ProjectReactions", fields: [projectId], references: [id])
  projectId Int?
  post      Post?      @relation("PostReactions", fields: [postId], references: [id])
  postId    Int?
}
